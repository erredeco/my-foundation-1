//Write here some mixins and functions you will use

/// *************
///
/// FUNCTIONS
///
/// *************


//inspired by https://css-tricks.com/snippets/sass/simple-asset-helper-functions/

/// Image asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the image
/// @require {function} map-safe-get from Foundation
///
/// Example:
///
/// body{
///	  background:transparent image('Portrait7.jpg');
/// }



@function image($file) {
 @return url(map-safe-get($relative-paths,Images)+ '/' + $file);
}


//se volessi utilizzarlo al porso di postcss-assets resolve: background: sprite('world.png') no-repeat 0 0;
@function sprite($file) {
 @return url(map-safe-get($relative-paths,Sprites)+ '/' + $file);
}


/// Font asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the font
/// @require {function} map-safe-get from Foundation

@function font($file) {
 @return url(map-safe-get($relative-paths,Fonts)+ '/' + $file);
}


/// *************
///
/// MIXINS
///
/// *************


/// Write font face with all font support
/// @access public
/// @param {String} $font-family - Name of the font family you want to use
/// @param {String} $font-file - Name of the font files to include WITHOUT EXTENSION! I assume that all the font files (woff, etc) have the same filename
/// We will use only the following formats:
/// .eot (OLD IE, maybe will be removed in the future)
/// .woff2 (still experimental, maybe can be removed)
/// .woff (at the present time, all browsers use this)
/// .otf (I don't think it is still needed)

/// Usage example:
/// @include font-face('Unicon LT',unicorn); (all files are unicorn.woff, etc)


@mixin font-face($font-family,$font-file){
	@font-face {
	  font-family: $font-family;
	  src:  font($font-file+'.eot?') format('eot'),
	  		font($font-file+'.woff2') format('woff2'),
			font($font-file+'.woff') format('woff'),
	        font($font-file+'.otf') format('truetype')	       
	}
}